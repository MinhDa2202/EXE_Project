@use "src/Styles/mixins" as m;

.detailsSection {
  display: grid;
  grid-template-columns: 50% 50%; /* Tỷ lệ cố định - cột ảnh 50%, cột thông tin 50% */
  gap: 3rem;
  margin: var(--page-margin) auto; /* Căn giữa container */
  min-height: 600px;
  max-width: 1400px; /* Giới hạn chiều rộng tối đa */
  width: 100%;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.95) 100%);
  border-radius: 20px;
  padding: 2.5rem;
  box-shadow: 0 8px 32px rgba(102, 126, 234, 0.1);
  border: 1px solid rgba(102, 126, 234, 0.1);
  backdrop-filter: blur(10px);
  position: relative;
  overflow: visible; /* Cho phép zoom preview hiển thị */
  
  /* Đảm bảo grid items không co giãn */
  align-items: start;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.02) 0%, rgba(118, 75, 162, 0.02) 100%);
    z-index: 0;
  }
  
  & > * {
    position: relative;
    z-index: 1;
  }
  
  @media (max-width: 1200px) {
    grid-template-columns: 42% 58%;
    gap: 2.5rem;
    padding: 2rem;
    max-width: 1200px;
  }
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 1.5rem;
    border-radius: 16px;
    min-height: auto;
    align-items: stretch;
  }
  
  @media (max-width: 480px) {
    padding: 1rem;
    border-radius: 12px;
    margin: 1rem auto;
    gap: 1.5rem;
  }
}

@include m.large {
  .detailsSection {
    grid-template-columns: 1fr;
    gap: 2rem;
    align-items: stretch;
    min-height: auto;
  }
}



.zoomInPreview {
  width: 100%;
  height: 540px;
  left: 0;
  top: 0;
  position: absolute;
  z-index: 10;
  border-radius: 16px;
  border: 2px solid rgba(102, 126, 234, 0.4);
  background: linear-gradient(135deg, rgba(248, 250, 252, 0.95) 0%, rgba(241, 245, 249, 0.95) 100%);
  overflow: hidden;
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s ease;
  box-shadow: 0 12px 40px rgba(102, 126, 234, 0.2);
  backdrop-filter: blur(10px);

  &.active {
    opacity: 1;
    pointer-events: all;
    border-color: rgba(102, 126, 234, 0.6);
    box-shadow: 0 16px 50px rgba(102, 126, 234, 0.3);
  }
}

@include m.large {
  .zoomInPreview {
    top: -725px;
    left: 50%;
    pointer-events: none !important;
    width: 500px;
    height: 500px;
    min-height: 500px;
    transform: translateX(-50%);
  }
}

@include m.small {
  .zoomInPreview {
    display: none;
  }
}

.zoomInPreview > img {
  width: 200%;
  height: 200%;
  position: absolute;
  left: 50%;
  top: 50%;
  pointer-events: none;
  object-fit: contain;
}

.horizontalLine {
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent 0%, rgba(102, 126, 234, 0.3) 50%, transparent 100%);
  margin: 0.5rem 0;
  border-radius: 1px;
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
  }
}

@include m.large {
  .horizontalLine {
    max-width: 100%;
    min-width: auto;
  }
}

// Enhanced visual hierarchy for details section
.details {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.02) 0%, rgba(118, 75, 162, 0.02) 100%);
  border-radius: 16px;
  padding: 2rem;
  border: 1px solid rgba(102, 126, 234, 0.08);
  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.05);
  backdrop-filter: blur(5px);
  height: fit-content; /* Chiều cao tự động theo nội dung */
  min-height: 500px; /* Chiều cao tối thiểu */
  max-height: none; /* Không giới hạn chiều cao tối đa */
  overflow-y: auto; /* Cho phép cuộn nếu nội dung quá dài */
  
  @media (max-width: 768px) {
    padding: 1.5rem;
    border-radius: 12px;
    min-height: auto;
    gap: 1.25rem;
  }
  
  @media (max-width: 480px) {
    padding: 1rem;
    border-radius: 10px;
    gap: 1rem;
  }
}

// Animation for smooth transitions
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.details > * {
  animation: fadeInUp 0.5s ease-out;
}

// Arabic styles
[dir=rtl] .detailsSection {
  direction: rtl;
}

@include m.large {
  [dir=rtl] .detailsSection {
    grid-template-columns: 1fr;
  }
}